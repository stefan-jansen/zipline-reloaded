name: Tests

on:
  workflow_dispatch:
  push:
    branches:
      - test-codecov
  schedule:
    - cron: "0 9 * * 6"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # os: [ ubuntu-latest, windows-latest, macos-latest ]
        os: [ ubuntu-latest ]
        # python-version: [ 3.7, 3.8, 3.9 ]
        python-version: [ 3.8 ]
        exclude:
          - os: windows-latest
            python-version: 3.9

    steps:
      - name: Checkout Zipline
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install TA-Lib Linux
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          curl -L -o ta-lib-0.4.0-src.tar.gz  http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz &&
          tar xvfz ta-lib-0.4.0-src.tar.gz &&
          cd ta-lib &&
          ./configure &&
          sudo make &&
          sudo make install &&
          sudo ldconfig

      - name: Install TA-Lib macOS
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install freetype pkg-config gcc openssl hdf5 ta-lib c-blosc

      - name: Developer Command Prompt for Microsoft Visual C++
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install TA-Lib Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          powershell -Command "(New-Object Net.WebClient).DownloadFile('http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-msvc.zip', 'ta-lib-0.4.0-msvc.zip')"
          powershell -Command "Add-Type -AssemblyName System.IO.Compression.FileSystem;[System.IO.Compression.ZipFile]::ExtractToDirectory('ta-lib-0.4.0-msvc.zip', 'C:\')"
          pushd C:\ta-lib\c\
          pushd make\cdd\win32\msvc
          nmake
          popd
          pushd make\cdr\win32\msvc
          nmake
          popd
          pushd make\cmd\win32\msvc
          nmake
          popd
          pushd make\cmr\win32\msvc
          nmake
          popd
          pushd make\csd\win32\msvc
          nmake
          popd
          pushd make\csr\win32\msvc
          nmake
          popd
          popd
          del ta-lib-0.4.0-msvc.zip

      - name: Install Zipline
        run: |
          python -VV
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions coveralls
          pip install -e .[test]

      - name: Lint with flake8
        run: |
          flake8

      - name: Unittests with tox & pytest
        run: |
          tox

      - name: Upload coverage data to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage1.xml,./coverage2.xml
          flags: unittests
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true
