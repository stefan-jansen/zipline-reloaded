name: PyPI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '**'           # Push events to every tag including hierarchical tags like v1.0/beta

jobs:
  build_wheels:
    name: py${{ matrix.python }} on ${{ matrix.os }} using ${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    env:
      CIBW_BEFORE_TEST_LINUX: >
        curl -L -o ta-lib-0.4.0-src.tar.gz  http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz &&
        tar xvfz ta-lib-0.4.0-src.tar.gz &&
        cd ta-lib &&
        ./configure &&
        make &&
        make install &&
        ldconfig &&
        yum install -y libjpeg8-dev zlib1g-dev
      CIBW_BEFORE_TEST_MACOS: >
        brew install freetype pkg-config gcc openssl c-blosc hdf5 ta-lib
      CIBW_TEST_COMMAND: python -c "import zipline; print(zipline.__version__)"
      CIBW_TEST_EXTRAS: test
      CIBW_BUILD_VERBOSITY: 1

    strategy:
      # Ensure that a wheel builders continue even if another fails
      fail-fast: false
      matrix:
        os: [ macos-latest, ubuntu-latest ]
        python: [ 37, 38, 39 ]
        manylinux_image: [ manylinux2010, manylinux2014 ]
        include:
          - os: macos-latest
            platform_id: macosx_x86_64
          - os: ubuntu-latest
            platform_id: manylinux_x86_64
        exclude:
          - os: macos-latest
            manylinux_image: manylinux2010

    steps:
      - name: Checkout zipline
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Build and test wheels
        uses: joerick/cibuildwheel@v2.1.1
        env:
          CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=10.14
          CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build sdist
        run: |
          pip install -U pip setuptools build
          python -m build --sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [ build_wheels, build_sdist ]
    runs-on: ubuntu-latest
    # upload to (Test)-PyPI on push with tag
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: publish to testpypi
        uses: pypa/gh-action-pypi-publish@master
        if: startsWith(github.event.head_commit.message, 'TEST')
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: publish to pypi
        uses: pypa/gh-action-pypi-publish@master
        if: startsWith(github.event.head_commit.message, 'PYPI')
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
